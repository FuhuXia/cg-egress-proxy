# TODO
# - For staging/prod:
#   - Document how to tunnel sftp://
#   - Document how to test with cf ssh port-forwarding to your browser!
# - For development:
#   - Document how to test with cf ssh port-forwarding to your browser!
#   	- Add test Dockerfile/directory to compose, similar to what Aaron did for Logstash
#   	- curl tests could also just run in the container, and reference localhost
#   	- Then run with `docker-compose exec caddy test``
{
	debug
	log {
		format console
		level INFO
	}
	auto_https off
}

:{$PORT} {
	route {
		forward_proxy {
			basic_auth {$PROXY_USERNAME} {$PROXY_PASSWORD}
			acl {
				deny_file deny.acl
				allow_file allow.acl
				deny all
			}
			ports 80 443 22
			serve_pac
		}
	}
	log {
		format json
		level INFO
		output stdout
	}
	tls cert.pem key.pem
}

mime {
  .html text/html;
  .css text/css;
  .xml text/xml;
  .gif image/gif;
  .jpg image/jpeg;
  .js application/x-javascript;
  .atom application/atom+xml;
  .rss application/rss+xml;
  .tff font/ttf;
  .woff font/woff;
  .woff2 font/woff2;
  .mml text/mathml;
  .txt text/plain;
  .jad text/vnd.sun.j2me.app-descriptor;
  .wml text/vnd.wap.wml;
  .htc text/x-component;
  .manifest text/cache-manifest;
  .png image/png;
  .tiff image/tiff;
  .wbmp image/vnd.wap.wbmp;
  .ico image/x-icon;
  .jng image/x-jng;
  .bmp image/x-ms-bmp;
  .svg image/svg+xml;
  .svgz image/svg+xml;
  .webp image/webp;
  .jar application/java-archive;
  .war application/java-archive;
  .ear application/java-archive;
  .hqx application/mac-binhex40;
  .doc application/msword;
  .pdf application/pdf;
  .ps application/postscript;
  .eps application/postscript;
  .ai application/postscript;
  .rtf application/rtf;
  .xls application/vnd.ms-excel;
  .ppt application/vnd.ms-powerpoint;
  .wmlc application/vnd.wap.wmlc;
  .kml application/vnd.google-earth.kml+xml;
  .kmz application/vnd.google-earth.kmz;
  .7z application/x-7z-compressed;
  .cco application/x-cocoa;
  .jardiff application/x-java-archive-diff;
  .jnlp application/x-java-jnlp-file;
  .run application/x-makeself;
  .pl application/x-perl;
  .pm application/x-perl;
  .prc application/x-pilot;
  .pdb application/x-pilot;
  .rar application/x-rar-compressed;
  .rpm application/x-redhat-package-manager;
  .sea application/x-sea;
  .swf application/x-shockwave-flash;
  .sit application/x-stuffit;
  .tcl application/x-tcl;
  .tk application/x-tcl;
  .der application/x-x509-ca-cert;
  .pem application/x-x509-ca-cert;
  .cert application/x-x509-ca-cert;
  .xpi application/x-xpinstall;
  .xhtml application/xhtml+xml;
  .zip application/zip;
  .bin application/octet-stream;
  .exe application/octet-stream;
  .dll application/octet-stream;
  .deb application/octet-stream;
  .dmg application/octet-stream;
  .eot application/octet-stream;
  .iso application/octet-stream;
  .img application/octet-stream;
  .msi application/octet-stream;
  .msp application/octet-stream;
  .msm application/octet-stream;
  .json application/json;
  .mid audio/midi;
  .midi audio/midi;
  .kar audio/midi;
  .mp3 audio/mpeg;
  .ogg audio/ogg;
  .m4a audio/x-m4a;
  .ra audio/x-realaudio;
  .3gpp video/3gpp;
  .3gp video/3gpp;
  .mp4 video/mp4;
  .mpeg video/mpeg;
  .mpg video/mpeg;
  .mov video/quicktime;
  .webm video/webm;
  .flv video/x-flv;
  .m4v video/x-m4v;
  .mng video/x-mng;
  .asx video/x-ms-asf;
  .asf video/x-ms-asf;
  .wmv video/x-ms-wmv;
  .avi video/x-msvideo;
}
